{% macro pagination(paginator, options) %}
    <div class="row">
        <nav class="text-left col-8">
            {% if paginator.haveToPaginate()|default(false) %}
                <ul class="pagination pagination-sm">
                    {{ 'pagination.page' | trans() }}
                    {% if paginator.currentPage == 1 %}
                        <li class="page-item disabled">
                            <a href="#" class="page-link">&laquo;</a>
                        </li>
                    {% else %}
                        <li class="page-item">
                            <a href="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({'page': 1})) }}"
                               class="page-link">&laquo;</a>
                        </li>
                    {% endif %}
                    {% if paginator.currentPage == 1 %}
                        <li class="page-item disabled">
                            <a href="#" class="page-link">&lsaquo;</a>
                        </li>
                    {% else %}
                        <li class="page-item">
                            <a href="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({'page': paginator.currentPage - 1})) }}"
                               class="page-link">&lsaquo;</a>
                        </li>
                    {% endif %}
                    {% for number in (paginator.currentPage <= 5 ? 1 : paginator.currentPage - 5)..(paginator.currentPage + 5 >= paginator.nbPages ? paginator.nbPages : paginator.currentPage + 5) %}
                        <li class="{% if number == paginator.currentPage %}active {% endif %}page-item">
                            <a class="page-link"
                               href="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({'page': number})) }}">{{ number }}</a>
                        </li>
                    {% endfor %}
                    {% if paginator.currentPage == paginator.nbPages %}
                        <li class="page-item disabled">
                            <a class="page-link" href="#">&rsaquo;</a>
                        </li>
                    {% else %}
                        <li class="page-item">
                            <a class="page-link"
                               href="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({'page': paginator.currentPage + 1})) }}">&rsaquo;</a>
                        </li>
                    {% endif %}
                    {% if paginator.currentPage == paginator.nbPages %}
                        <li class="page-item disabled">
                            <a class="page-link" href="#">&raquo;</a>
                        </li>
                    {% else %}
                        <li class="page-item">
                            <a class="page-link"
                               href="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')|merge(app.request.query.all)|merge({'page': paginator.nbPages})) }}">&raquo;</a>
                        </li>
                    {% endif %}
                    <li>
                        | {{ 'pagination.items' | trans({'%_count%': paginator.nbResults}) }}
                    </li>
                </ul>
            {% endif %}
        </nav>
    </div>
{% endmacro %}

{% macro filter(field, field_id, type) %}
    {% if type == null or type == 'string' %}
        <input class="form-control-sm form-control filter-select" form="{{ field_id }}"
               name="criteria[{{ field }}]"
               value="{{ app.request.get('criteria')[field] | default() }}">
    {% elseif type == 'boolean' %}
        <select class="form-control-sm form-control filter-select" form="{{ field_id }}"
                name="criteria[{{ field }}]">
            <option value=""></option>
            <option {% if (app.request.get('criteria')[field] | default()) is same as("1") %}selected{% endif %}
                    value="1">{{ 'filter.enabled' | trans }}
            </option>
            <option {% if (app.request.get('criteria')[field] | default()) is same as("0") %}selected{% endif %}
                    value="0">{{ 'filter.disabled' | trans }}
            </option>
        </select>
    {% elseif type is iterable %}
        {% if type['_entity'] is defined %}
            <select class="form-control-sm form-control filter-select filter-list_entity" form="{{ field_id }}"
                    name="criteria[{{ field }}]"
                    data-href="{{ path('positibe_core_entity_filter', {'class':type['_entity'],'criteria': type['criteria'] is defined ? type['criteria'] : {}, 'selected': app.request.get('criteria')[field] | default('_all'), 'field': type['_field'] is defined ? type['_field'] : null}) }}">
            </select>
        {% else %}
            <select class="form-control-sm form-control" form="{{ field_id }}"
                    name="criteria[{{ field }}]">
                <option value=""></option>
                {% for value,option in type %}
                    <option {% if (app.request.get('criteria')[field] | default()) is same as(value) %}selected{% endif %}
                            value="{{ value }}">{{ option | trans }}
                    </option>
                {% endfor %}
            </select>
        {% endif %}
    {% elseif type == 'range_date' %}
        {#<input class="form-control-sm form-control date-picker" form="{{ field_id }}"#}
        {#name="criteria[{{ field }}]"#}
        {#value="{{ app.request.get('criteria')[field]['from'] | default() }}">#}
        {#<input class="form-control-sm form-control date-picker" form="{{ field_id }}"#}
        {#name="criteria[receivedDate_to]"#}
        {#value="{{ app.request.get('criteria')[field]['to'] | default() }}">#}
    {% endif %}
{% endmacro %}